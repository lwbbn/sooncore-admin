<?php
// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `IceBox.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once 'Ice/BuiltinSequences.php';
require_once 'Ice/CommunicatorF.php';
require_once 'Ice/PropertiesF.php';
require_once 'Ice/SliceChecksumDict.php';

if(!class_exists('IceBox_FailureException'))
{
    class IceBox_FailureException extends Ice_LocalException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_name()
        {
            return 'IceBox::FailureException';
        }

        public function __toString()
        {
            global $IceBox__t_FailureException;
            return IcePHP_stringifyException($this, $IceBox__t_FailureException);
        }

        public $reason;
    }

    $IceBox__t_FailureException = IcePHP_defineException('::IceBox::FailureException', 'IceBox_FailureException', null, array(
        array('reason', $IcePHP__t_string)));
}

if(!class_exists('IceBox_AlreadyStartedException'))
{
    class IceBox_AlreadyStartedException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'IceBox::AlreadyStartedException';
        }

        public function __toString()
        {
            global $IceBox__t_AlreadyStartedException;
            return IcePHP_stringifyException($this, $IceBox__t_AlreadyStartedException);
        }
    }

    $IceBox__t_AlreadyStartedException = IcePHP_defineException('::IceBox::AlreadyStartedException', 'IceBox_AlreadyStartedException', null, null);
}

if(!class_exists('IceBox_AlreadyStoppedException'))
{
    class IceBox_AlreadyStoppedException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'IceBox::AlreadyStoppedException';
        }

        public function __toString()
        {
            global $IceBox__t_AlreadyStoppedException;
            return IcePHP_stringifyException($this, $IceBox__t_AlreadyStoppedException);
        }
    }

    $IceBox__t_AlreadyStoppedException = IcePHP_defineException('::IceBox::AlreadyStoppedException', 'IceBox_AlreadyStoppedException', null, null);
}

if(!class_exists('IceBox_NoSuchServiceException'))
{
    class IceBox_NoSuchServiceException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'IceBox::NoSuchServiceException';
        }

        public function __toString()
        {
            global $IceBox__t_NoSuchServiceException;
            return IcePHP_stringifyException($this, $IceBox__t_NoSuchServiceException);
        }
    }

    $IceBox__t_NoSuchServiceException = IcePHP_defineException('::IceBox::NoSuchServiceException', 'IceBox_NoSuchServiceException', null, null);
}

if(!interface_exists('IceBox_Service'))
{
    interface IceBox_Service
    {
        public function start($name, $communicator, $args);
        public function stop();
    }

    $IceBox__t_Service = IcePHP_defineClass('::IceBox::Service', 'IceBox_Service', true, $Ice__t_Object, null, null);
}

if(!interface_exists('IceBox_ServiceObserver'))
{
    interface IceBox_ServiceObserver
    {
        public function servicesStarted($services);
        public function servicesStopped($services);
    }

    class IceBox_ServiceObserverPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::IceBox::ServiceObserver', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::IceBox::ServiceObserver', $facet);
        }
    }

    $IceBox__t_ServiceObserver = IcePHP_defineClass('::IceBox::ServiceObserver', 'IceBox_ServiceObserver', true, $Ice__t_Object, null, null);

    $IceBox__t_ServiceObserverPrx = IcePHP_defineProxy($IceBox__t_ServiceObserver);

    IcePHP_defineOperation($IceBox__t_ServiceObserver, 'servicesStarted', 0, 0, array($Ice__t_StringSeq), null, null, null);
    IcePHP_defineOperation($IceBox__t_ServiceObserver, 'servicesStopped', 0, 0, array($Ice__t_StringSeq), null, null, null);
}

if(!interface_exists('IceBox_ServiceManager'))
{
    interface IceBox_ServiceManager
    {
        public function getSliceChecksums();
        public function startService($service);
        public function stopService($service);
        public function addObserver($observer);
        public function shutdown();
    }

    class IceBox_ServiceManagerPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::IceBox::ServiceManager', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::IceBox::ServiceManager', $facet);
        }
    }

    $IceBox__t_ServiceManager = IcePHP_defineClass('::IceBox::ServiceManager', 'IceBox_ServiceManager', true, $Ice__t_Object, null, null);

    $IceBox__t_ServiceManagerPrx = IcePHP_defineProxy($IceBox__t_ServiceManager);

    IcePHP_defineOperation($IceBox__t_ServiceManager, 'getSliceChecksums', 2, 1, null, null, $Ice__t_SliceChecksumDict, null);
    IcePHP_defineOperation($IceBox__t_ServiceManager, 'startService', 0, 0, array($IcePHP__t_string), null, null, array($IceBox__t_AlreadyStartedException, $IceBox__t_NoSuchServiceException));
    IcePHP_defineOperation($IceBox__t_ServiceManager, 'stopService', 0, 0, array($IcePHP__t_string), null, null, array($IceBox__t_AlreadyStoppedException, $IceBox__t_NoSuchServiceException));
    IcePHP_defineOperation($IceBox__t_ServiceManager, 'addObserver', 0, 0, array($IceBox__t_ServiceObserverPrx), null, null, null);
    IcePHP_defineOperation($IceBox__t_ServiceManager, 'shutdown', 0, 0, null, null, null, null);
}
?>
