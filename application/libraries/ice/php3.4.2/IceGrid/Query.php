<?php
// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `Query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once 'Ice/Identity.php';
require_once 'Ice/BuiltinSequences.php';
require_once 'IceGrid/Exception.php';

if(!class_exists('IceGrid_LoadSample'))
{
    class IceGrid_LoadSample
    {
        const LoadSample1 = 0;
        const LoadSample5 = 1;
        const LoadSample15 = 2;
    }

    $IceGrid__t_LoadSample = IcePHP_defineEnum('::IceGrid::LoadSample', array('LoadSample1', 'LoadSample5', 'LoadSample15'));
}

if(!interface_exists('IceGrid_Query'))
{
    interface IceGrid_Query
    {
        public function findObjectById($id);
        public function findObjectByType($type);
        public function findObjectByTypeOnLeastLoadedNode($type, $sample);
        public function findAllObjectsByType($type);
        public function findAllReplicas($proxy);
    }

    class IceGrid_QueryPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::IceGrid::Query', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::IceGrid::Query', $facet);
        }
    }

    $IceGrid__t_Query = IcePHP_defineClass('::IceGrid::Query', 'IceGrid_Query', true, $Ice__t_Object, null, null);

    $IceGrid__t_QueryPrx = IcePHP_defineProxy($IceGrid__t_Query);

    IcePHP_defineOperation($IceGrid__t_Query, 'findObjectById', 2, 1, array($Ice__t_Identity), null, $Ice__t_ObjectPrx, null);
    IcePHP_defineOperation($IceGrid__t_Query, 'findObjectByType', 2, 1, array($IcePHP__t_string), null, $Ice__t_ObjectPrx, null);
    IcePHP_defineOperation($IceGrid__t_Query, 'findObjectByTypeOnLeastLoadedNode', 2, 1, array($IcePHP__t_string, $IceGrid__t_LoadSample), null, $Ice__t_ObjectPrx, null);
    IcePHP_defineOperation($IceGrid__t_Query, 'findAllObjectsByType', 2, 1, array($IcePHP__t_string), null, $Ice__t_ObjectProxySeq, null);
    IcePHP_defineOperation($IceGrid__t_Query, 'findAllReplicas', 2, 2, array($Ice__t_ObjectPrx), null, $Ice__t_ObjectProxySeq, null);
}
?>
